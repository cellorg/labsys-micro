name: Manual destroy

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      targetEnv:
        type: choice
        description: 'targetEnv'
        default: 'd1'
        required: true
        options:
          - d1
          - d2
          - t3
          - u1
          - prod
      keepApiGateway:
        description: 'keepApiGateway'
        default: true
        required: true
        type: boolean

run-name: ${{ inputs.targetEnv }} - Destroy stacks, keepApiGateway=${{ inputs.keepApiGateway }}, branch=${{ github.head_ref || github.ref_name }}

jobs:
  destroyAllStacks:
    name: manual destroy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: For prod deployment, only user 'wdaicellorg' can deploy and deployment can only from a release branch
        if: ${{ inputs.targetEnv == 'prod' && !(github.actor == 'wdaicellorg' && startsWith(github.ref_name, 'release')) }}
        run: |
          echo Only user 'wdaicellorg' can deploy to prod, and only the release branch can be deployed to prod.
          exit 1
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1
        with:
          node-version: "16"
      - name: Configure AWS Credentials - nonprod
        if: ${{ targetEnv != 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ arn:aws:iam::secrets.NON_PROD_AWS_ACCOUNT:role/github-cdk-deploy-role }}
          aws-region: 'us-east-1'
      - name: Configure AWS Credentials - prod
        if: ${{ targetEnv == 'prod' }}
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ arn:aws:iam::secrets.PROD_AWS_ACCOUNT:role/github-cdk-deploy-role }}
          aws-region: 'us-east-1'
      - name: Install AWS CDK
        run: sudo npm install -g aws-cdk
      - name: Destroy AWS resources - microServices, infra and vpc
        run: |
          cd cdk-infra/github-deploy-infra/common
          npm install
          npm run build
          
          cd ../micro-svc-infra
          npm install
          npm run build
          cdk destroy --all --force
          
      - name: Destroy AWS resources - API Gateway
        if: ${{ ! inputs.keepApiGateway }}
        run:  |
          cd cdk-infra/github-deploy-infra/common
          npm install
          npm run build
          
          cd ../shared-api-gw-infra
          npm install
          npm run build
          cdk destroy labsys-sharedApiGateway-stack --force


          



        
      
      
      
